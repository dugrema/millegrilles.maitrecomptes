{"version":3,"file":"static/js/187.03dc21c6.chunk.js","mappings":"+UA4DA,SAASA,EAAiBC,GAEtB,IAAQC,EAAaD,EAAbC,SAEFC,GAAUC,EAAAA,EAAAA,MACVC,GAAWC,EAAAA,EAAAA,MAAc,GACzBC,GAAiBC,EAAAA,EAAAA,MAAoB,GACrCC,GAAWC,EAAAA,EAAAA,MAETC,EAAcN,EAAdM,UAER,GAA0CC,EAAAA,EAAAA,WAAS,GAAM,eAAlDC,EAAa,KAAEC,EAAgB,KACtC,GAAsBF,EAAAA,EAAAA,UAAS,IAAG,eAA3BG,EAAG,KAAEC,EAAM,KAClB,GAAkDJ,EAAAA,EAAAA,UAAS,IAAG,eAAvDK,EAAiB,KAAEC,EAAoB,KAC9C,GAAsDN,EAAAA,EAAAA,UAAS,IAAG,eAA3DO,EAAmB,KAAEC,EAAsB,KAClD,GAAoDR,EAAAA,EAAAA,UAAS,IAAG,eAAzDS,EAAkB,KAAEC,EAAqB,KAE1CC,GAAQC,EAAAA,EAAAA,cAAY,SAAAT,GACxBU,QAAQC,MAAM,gBAAiBX,GAC/BC,EAAOD,EACT,GAAG,CAACC,IAEEW,GAAgBH,EAAAA,EAAAA,cAAY,WAC9B,IAAOI,EAAazB,EAAbyB,UACAC,EAAgCV,EAAhCU,kBAAmBC,EAAaX,EAAbW,UACpBC,EAASC,OAAOC,SAASC,SAE/BZ,EAAsB,YAEtBa,EAAAA,EAAAA,IAA8BxB,EAAWkB,EAAmBC,GACvDM,KAAI,yCAAC,WAAMC,GAAiB,8EAWiC,OAV1DZ,QAAQC,MAAM,mCAAoCW,GAE5CC,EAAW,CACbT,kBAAmBQ,EAAkBR,kBACrCU,wBAAyBF,EAAkBG,SAC3CT,OAAAA,EACAG,SAAUH,EACVU,UAAWxB,GAGfQ,QAAQC,MAAM,kCAAmCY,GAAS,SACpCV,EAAUc,kBAAkBJ,GAAS,OAArDK,EAAO,OACblB,QAAQC,MAAM,oCAAqCiB,GAEhDA,EAAQC,KACPtB,EAAsB,SACtBpB,EAASyC,EAAQC,IAAK,wCAEtBtB,EAAsB,UACzB,2CACJ,mDArBI,IAsBJuB,OAAM,SAAAD,GACHtB,EAAsB,SACtBpB,EAAS0C,EACb,GACR,GAAG,CAACzC,EAASQ,EAAWM,EAAmBE,EAAqBG,EAAuBpB,IA+BvF,OA7BA4C,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,kBACGX,MAAK,SAAAY,GAAO,OAAElC,EAAiBkC,EAAQ,IACvCH,OAAM,SAAAD,GAAG,OAAE1C,EAAS0C,EAAI,GAC7B,GAAG,CAAC9B,EAAkBZ,KAItB4C,EAAAA,EAAAA,YAAU,WACN,GAAG/B,EAAK,CACJU,QAAQC,MAAM,wDAAyDrB,EAAUE,EAAgBQ,GACjG,IAAMmB,EAAWF,OAAOC,SAASC,SACjC/B,EAAQyB,UAAUqB,iBAAiB,CAC/Bf,SAAAA,EACAgB,wBAAwB,IACzBd,MAAK,SAAAe,GACJ1B,QAAQC,MAAM,wBAAyByB,GACvC,IAAMC,EAA0BD,EAAiBE,yBAEjD,OADAnC,EAAqBkC,EAAwBtB,UAAUW,YAChDa,EAAAA,EAAAA,IAAyB3C,EAAWyC,EAAyBrC,EAAK,CAACwC,kBAAkB,GAChG,IACCnB,MAAK,SAAAoB,GACF/B,QAAQC,MAAM,gCAAiC8B,GAC/CpC,EAAuBoC,EAC3B,IACCX,MAAM3C,EACX,CACJ,GAAG,CAACS,EAAWJ,EAAgBQ,EAAKK,EAAwBF,EAAsBhB,KAGhF,iCACE,wBAAI,oBAEJ,SAAC,IAAa,WACV,SAAC,EAAAuD,0BAAyB,CACtB9C,UAAWA,EACXR,QAASA,EACTU,cAAeA,EACfU,MAAOA,EACPrB,SAAUA,OAGlB,mBAEA,SAAC,IAAKwD,MAAK,WACP,SAAC,IAAKC,KAAI,CAACC,UAAU,aAAY,SAAC,iDAItC,SAAC,EAAAC,YAAW,CACRC,QAASnC,EACToC,KAAM1C,EACN2C,UAAWjD,IAAQN,EAAS,SAAC,cAKzC,CArHA,UA1CA,SAA8BR,GAC1B,IAAOgE,EAAoBhE,EAApBgE,OAAQ/D,EAAYD,EAAZC,SAEf,OACI,iCACI,UAAC,IAAG,YACA,SAAC,IAAG,CAACgE,GAAI,GAAIC,GAAI,GAAG,UAAC,wBAAI,2BACzB,SAAC,IAAG,CAACD,GAAI,EAAGC,GAAI,EAAGP,UAAU,SAAQ,UACjC,SAAC,IAAM,CAACE,QAASG,EAAQG,QAAQ,YAAW,UAAC,cAAGR,UAAU,yBAIlE,uBAAG,wGAIH,SAAC5D,EAAgB,CACbE,SAAUA,KAEd,mBAEA,UAAC,IAAK,CAACkE,QAAQ,OAAOC,MAAM,EAAK,WAC7B,SAAC,IAAMC,QAAO,UAAC,kBACf,uBAAG,wIAKH,2BACI,wBAAI,4EACJ,wBAAI,0CACJ,wBAAI,yBACJ,wBAAI,+CACJ,wBAAI,qEACJ,wBAAI,6FAMxB,C","sources":["ActiverCompte.js"],"sourcesContent":["import { useState, useCallback, useEffect  } from 'react'\nimport Alert from 'react-bootstrap/Alert'\nimport Button from 'react-bootstrap/Button'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Form from 'react-bootstrap/Form'\n\nimport base64url from 'base64url'\n\nimport { AfficherActivationsUsager, supporteCamera, BoutonActif } from '@dugrema/millegrilles.reactjs'\n\nimport useWorkers, {useUsagerDb, useUsagerSocketIo, useEtatPret} from './WorkerContext'\n\nimport ErrorBoundary from './ErrorBoundary';\nimport { preparerAuthentification, signerDemandeAuthentification } from './WebAuthn'\n\nfunction SectionActiverCompte(props) {\n    const {fermer, erreurCb} = props\n\n    return (\n        <>\n            <Row>\n                <Col xs={10} md={11}><h2>Activer un appareil</h2></Col>\n                <Col xs={2} md={1} className=\"bouton\">\n                    <Button onClick={fermer} variant=\"secondary\"><i className='fa fa-remove'/></Button>\n                </Col>\n            </Row>\n\n            <p>\n                Cette section permet d'activer votre compte sur un autre appareil ou site lie a cette MilleGrille.\n            </p>\n\n            <ActivationUsager \n                erreurCb={erreurCb} />\n\n            <hr/>\n\n            <Alert variant=\"dark\" show={true}>\n                <Alert.Heading>Instructions</Alert.Heading>\n                <p>\n                    Pour proceder, vous devez obtenir un code sur votre autre appareil ou site. \n                    Le code est genere lors d'un echec d'authentification.\n                </p>\n\n                <ol>\n                    <li>Utiliser votre autre appareil, ou ce navigateur pour aller sur le site</li>\n                    <li>Choisissez/entrez votre nom d'usager</li>\n                    <li>Cliquez sur suivant</li>\n                    <li>Cliquez sur Annuler ou attendez 1 minute.</li>\n                    <li>La page avec l'information d'activation de compte est affichee.</li>\n                    <li>Revenir sur cette page et entrer le code (e.g. jdzl-a7u7) ou scanner le code QR.</li>\n                </ol>\n            </Alert>\n\n        </>\n    )\n}\n\nexport default SectionActiverCompte\n\nfunction ActivationUsager(props) {\n\n    const { erreurCb } = props\n\n    const workers = useWorkers()\n    const usagerDb = useUsagerDb()[0]\n    const usagerSocketIo = useUsagerSocketIo()[0]\n    const etatPret = useEtatPret()\n\n    const { nomUsager } = usagerDb\n  \n    const [supportCodeQr, setSupportCodeQr] = useState(false)\n    const [csr, setCsr] = useState('')\n    const [challengeOriginal, setChallengeOriginal] = useState('')\n    const [preparationWebauthn, setPreparationWebauthn] = useState('')\n    const [resultatActivation, setResultatActivation] = useState('')\n\n    const csrCb = useCallback(csr=>{\n      console.debug(\"Recu csr : %O\", csr)\n      setCsr(csr)\n    }, [setCsr])\n  \n    const activerCodeCb = useCallback(()=>{\n        const {connexion} = workers\n        const {demandeCertificat, publicKey} = preparationWebauthn\n        const origin = window.location.hostname\n        \n        setResultatActivation('attente')\n        \n        signerDemandeAuthentification(nomUsager, demandeCertificat, publicKey)\n            .then(async signatureWebauthn => {\n                console.debug(\"Resultat signature webauthn : %O\", signatureWebauthn)\n\n                const commande = {\n                    demandeCertificat: signatureWebauthn.demandeCertificat,\n                    clientAssertionResponse: signatureWebauthn.webauthn,\n                    origin,\n                    hostname: origin,\n                    challenge: challengeOriginal,\n                }\n\n                console.debug(\"Commande demande signature : %O\", commande)\n                const reponse = await connexion.signerRecoveryCsr(commande)\n                console.debug(\"Reponse signature certificat : %O\", reponse)\n\n                if(reponse.err) {\n                    setResultatActivation('echec')\n                    erreurCb(reponse.err, \"Erreur lors de l'activation du code\")\n                } else {\n                    setResultatActivation('succes')\n                }\n            })\n            .catch(err=>{\n                setResultatActivation('echec')\n                erreurCb(err)\n            })\n    }, [workers, nomUsager, challengeOriginal, preparationWebauthn, setResultatActivation, erreurCb])\n\n    useEffect(()=>{\n      supporteCamera()\n        .then(support=>setSupportCodeQr(support))\n        .catch(err=>erreurCb(err))\n    }, [setSupportCodeQr, erreurCb])\n\n\n    // Charger le nom de l'usager dans le CSR\n    useEffect(()=>{\n        if(csr) {\n            console.debug(\"Generer challenge pour %O\\nUsager socketio %O\\nCSR %s\", usagerDb, usagerSocketIo, csr)\n            const hostname = window.location.hostname\n            workers.connexion.genererChallenge({\n                hostname,\n                webauthnAuthentication: true\n            }).then(reponseChallenge=>{\n                console.debug(\"Challenge webauthn : \", reponseChallenge)\n                const authenticationChallenge = reponseChallenge.authentication_challenge\n                setChallengeOriginal(authenticationChallenge.publicKey.challenge)\n                return preparerAuthentification(nomUsager, authenticationChallenge, csr, {activationTierce: true})\n            })\n            .then(challengePrepare=>{\n                console.debug(\"Challenge webauthn prepare : \", challengePrepare)\n                setPreparationWebauthn(challengePrepare)\n            })\n            .catch(erreurCb)\n        }\n    }, [nomUsager, usagerSocketIo, csr, setPreparationWebauthn, setChallengeOriginal, erreurCb])\n\n    return (\n      <>\n        <h2>Activer compte</h2>\n\n        <ErrorBoundary>\n            <AfficherActivationsUsager \n                nomUsager={nomUsager}\n                workers={workers}\n                supportCodeQr={supportCodeQr}\n                csrCb={csrCb}\n                erreurCb={erreurCb} />\n        </ErrorBoundary>\n\n        <br/>\n\n        <Form.Group>\n            <Form.Text className=\"text-muted\">\n                Saisissez un code et cliquez sur Activer.\n            </Form.Text>\n        </Form.Group>\n        <BoutonActif \n            onClick={activerCodeCb} \n            etat={resultatActivation}\n            disabled={!csr || !etatPret}>\n            Activer\n        </BoutonActif>\n      </>\n    )\n}"],"names":["ActivationUsager","props","erreurCb","workers","useWorkers","usagerDb","useUsagerDb","usagerSocketIo","useUsagerSocketIo","etatPret","useEtatPret","nomUsager","useState","supportCodeQr","setSupportCodeQr","csr","setCsr","challengeOriginal","setChallengeOriginal","preparationWebauthn","setPreparationWebauthn","resultatActivation","setResultatActivation","csrCb","useCallback","console","debug","activerCodeCb","connexion","demandeCertificat","publicKey","origin","window","location","hostname","signerDemandeAuthentification","then","signatureWebauthn","commande","clientAssertionResponse","webauthn","challenge","signerRecoveryCsr","reponse","err","catch","useEffect","supporteCamera","support","genererChallenge","webauthnAuthentication","reponseChallenge","authenticationChallenge","authentication_challenge","preparerAuthentification","activationTierce","challengePrepare","AfficherActivationsUsager","Group","Text","className","BoutonActif","onClick","etat","disabled","fermer","xs","md","variant","show","Heading"],"sourceRoot":""}